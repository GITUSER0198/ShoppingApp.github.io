{"version":3,"sources":["./src/app/admin/product/listproducts/product-image/product-image.component.ts","./src/app/admin/product/listproducts/product-image/product-image.component.html","./src/app/shared/shared-components/order-history/order-history.component.html","./src/app/shared/shared-components/order-history/order-history.component.ts","./src/app/shared/shared-components/shopping-cart/product-list/product-item/product-item.component.ts","./src/app/shared/shared-components/shopping-cart/product-list/product-item/product-item.component.html","./src/app/Authentication/auth/authguard.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/Authentication/login/login.component.html","./src/app/Authentication/login/login.component.ts","./src/app/shared/services/auth.service.ts","./src/app/admin/product/listproducts/listproducts.component.ts","./src/app/admin/product/listproducts/listproducts.component.html","./src/app/shared/shared-components/nav/nav.component.html","./src/app/shared/shared-components/nav/nav.component.ts","./src/app/shared/services/order.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.html","./src/app/admin/admin.component.ts","./src/app/admin/product/product/product.component.ts","./src/app/admin/product/product/product.component.html","./src/app/admin/product/addproduct/addproduct.component.html","./src/app/admin/product/addproduct/addproduct.component.ts","./src/app/app.module.ts","./src/app/admin/all-orders/all-orders.component.html","./src/app/admin/all-orders/all-orders.component.ts","./src/app/admin/all-orders/order-details-admin/order-details-admin.component.html","./src/app/admin/all-orders/order-details-admin/order-details-admin.component.ts","./src/app/shared/shared-components/shopping-cart/cart/cart.component.html","./src/app/shared/shared-components/shopping-cart/cart/cart.component.ts","./src/app/shared/shared-components/shopping-cart/product-list/product-list.component.html","./src/app/shared/shared-components/shopping-cart/product-list/product-list.component.ts","./src/app/shared/shared-components/shopping-cart/cart/checkout/checkout.component.html","./src/app/shared/shared-components/shopping-cart/cart/checkout/checkout.component.ts","./src/app/shared/shared-components/shopping-cart/cart/cart-item/product-details/product-details.component.html","./src/app/shared/shared-components/shopping-cart/cart/cart-item/product-details/product-details.component.ts","./src/app/shared/shared-components/shopping-cart/cart/cart-item/cart-item.component.ts","./src/app/shared/shared-components/shopping-cart/cart/cart-item/cart-item.component.html","./src/app/shared/services/product.service.ts","./src/app/Authentication/register/register.component.html","./src/app/Authentication/register/register.component.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/shared/shared-components/order-history/order-details/order-details.component.html","./src/app/shared/shared-components/order-history/order-details/order-details.component.ts","./src/app/shared/services/customer.service.ts","./src/app/shared/shared-components/shopping-cart/shopping-cart.component.ts","./src/app/shared/shared-components/shopping-cart/shopping-cart.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/services/product.service';\n\n@Component({\n  selector: 'app-product-image',\n  templateUrl: './product-image.component.html',\n  styleUrls: ['./product-image.component.css']\n})\nexport class ProductImageComponent implements OnInit {\n\n  image\n  constructor(private productService:ProductService) { }\n\n  ngOnInit(): void {\n    this.image=this.productService.image\n    console.log(this.image);\n  }\n\n}\n","<button mat-button class=\"close-icon\" class=\"close-button\" [mat-dialog-close]=\"true\">\n    <mat-icon>close</mat-icon>\n</button>\n\n<img src=\"data:image/jpeg;base64,{{image}}\" style=\"width: 200px; \" alt=\"An Image\"  />","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf\" crossorigin=\"anonymous\"></script>\n<app-nav></app-nav>\n\n\n<table class=\"table\">\n    <thead class=\"thead-dark table-primary\">\n      <tr>\n        <th scope=\"col\">Order ID</th>\n        <th scope=\"col\">Order Date and Time</th>\n        <th scope=\"col\">Order Total</th>\n        <th scope=\"col\">Order Status</th>\n        <th scope=\"col\">Details</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let order of orderList\">\n        <td>{{order.order_id}}</td>\n        <td>{{order.order_date|date:'medium'}}</td>\n        <td>{{order.order_total|currency:\"INR\"}}</td>\n        <td>{{order.order_status}}</td>\n        <button  (click)=\"getDetails(order)\">View Details</button>\n      </tr>\n    </tbody>\n  </table>\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OrderService } from '../../services/order.service';\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.css']\n})\nexport class OrderHistoryComponent implements OnInit {\n\n  constructor(private orderService:OrderService,\n    private router:Router) { }\n  orderList\n\n  \n  ngOnInit(): void {\n  this.orderService.getOrders().then(res=>{\n    if(!res)\n    {\n      console.log(Error);\n    }\n    this.orderList=res;\n    this.orderList=this.orderList.filter(res=>{\n      if(res.customer_id!=null)\n      return res.customer_id ==localStorage.getItem('Customer_id')}); \n        this.orderList=this.orderList.sort((order1,order2)=> \n          {return this.compareObjects(order1,order2, 'order_date')\n          })\n\n        }\n      )\n  }\n\n  getDetails(order)\n  {\n    this.orderService.order=order\n    this.orderService.orderId=order.order_id\n    this.router.navigate(['/orderdetails'])\n    \n  }\n  compareObjects(object1, object2, key) {\n    const obj1 = object1[key].toUpperCase()\n    const obj2 = object2[key].toUpperCase()\n  \n    if (obj1 < obj2) {\n      return 1\n    }\n    if (obj1 > obj2) {\n      return -1\n    }\n    return 0\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { ProductDetailsComponent } from '../../cart/cart-item/product-details/product-details.component';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.css']\n})\nexport class ProductItemComponent implements OnInit {\n\n  @Input()\n  productItem\n\n  constructor(\n    private orderService:OrderService,\n    private dialog:MatDialog,private productService:ProductService) { }\n\n  ngOnInit(): void {\n  }\n\n  handleAddToCart(product)\n  {\n    this.orderService.addProductToCart(product)\n  }\n\n  viewDetails(productItem)\n  {\n    const dialogConfig = new MatDialogConfig();\n     dialogConfig.disableClose=true;\n    this.productService.product=productItem\n    this.dialog.open(ProductDetailsComponent,{width:'40%',height:'auto'})\n\n  }\n\n}\n","\n<div class=\"card mb-4 box-shadow\" style=\"width: 210px; height: 280px;\">\n  <span *ngIf=\"productItem.product_Image_Name!=null\">\n    <img class=\"card-img-top\" style=\"width: 110px; height: 120px;margin-left: 30px;\" src=\"data:image/jpeg;base64,{{productItem.product_Image}}\"alt=\"Card image cap\">\n  </span>\n    <div class=\"card-body\">\n        <p><strong>    \n            <small class=\"text-muted\">{{productItem.product_price|currency:\"INR\"}}</small>\n    </strong></p>\n        <p class=\"card-text\" >{{productItem.product_name}}</p>\n        \n        <div class=\"button-align\">\n            <span *ngIf=\"productItem.product_quantity!=0\">\n            <button type=\"button\" class=\"btn btn-sm btn-primary product-btn mr-1\" (click)=\"handleAddToCart(productItem)\" >Add to Cart</button>\n             </span>\n             <span *ngIf=\"productItem.product_quantity==0\">\n              <button type=\"button\" class=\"btn btn-sm  product-btn mr-1\" style=\"background-color: gray;\" disabled >Add to Cart</button>\n            </span>\n            <button type=\"button\" class=\"btn btn-sm btn-info product-btn\" (click)=\"viewDetails(productItem)\">View Details</button>\n        </div>\n        <span *ngIf=\"productItem.product_quantity==0\" style=\"color: red; font-weight: ;\" class=\"hcenter\">\n        <h4>Out of stock</h4>  \n        </span>\n\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthguardService implements CanActivate {\n\n  constructor(private jwtHelper: JwtHelperService, private router: Router) { }\n  canActivate(){\n    const token = localStorage.getItem(\"jwt\");\n    if (token && !this.jwtHelper.isTokenExpired(token)){\n      return true;\n    }\n    this.router.navigate([\"/login\"]);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  ngOnInit(): void {\n\n  }\n  constructor(private jwtHelper:JwtHelperService,private router:Router) { }\n  \n isUserAuthenticated() {\n  const token: string = localStorage.getItem(\"jwt\");\n\n  if (token && !this.jwtHelper.isTokenExpired(token)) {\n    return true;\n  }\n  else {\n\n    return false;\n  }\n}\nlogOut() {\n  localStorage.removeItem(\"jwt\");\n  localStorage.removeItem(\"userRoles\");\n  localStorage.removeItem(\"user\");\n\n  this.router.navigate(['/login'])\n}\n  \n \n\n}\n","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf\" crossorigin=\"anonymous\"></script>\n \n<app-nav></app-nav>\n<div class=\"container\">\n\n    <div class=\"row\">\n        <div class=\"col\">\n            <app-shopping-cart></app-shopping-cart>\n        </div>\n    </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<app-nav>\n\n</app-nav>\n<div class=\"main-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n  <mat-card class=\"box\">\n    <mat-card-header>\n      <mat-card-title>Sign In</mat-card-title>\n    </mat-card-header>\n   <form  class=\"example-form\" [formGroup]=\"authService.loginForm\" (ngSubmit)=\"onSubmit()\" >\n    <mat-card-content>\n\n      <mat-form-field style=\"width:23vw\">\n          <input matInput placeholder=\"Email\" formControlName=\"Customer_email\" >\n          <mat-error *ngIf=\"authService.loginForm.controls.Customer_email.hasError('required')\">\n            Email required\n          </mat-error>\n          <mat-error *ngIf=\"authService.loginForm.controls.Customer_email.hasError('email') && !authService.loginForm.controls.Customer_email.hasError('required') \">\n            Enter valid email\n          </mat-error>\n          \n        </mat-form-field>\n      <mat-form-field style=\"width:23vw\">\n        <input matInput placeholder=\"Password\"  [type]=\"hide ? 'password' : 'text'\"  formControlName=\"password\">\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        <mat-error *ngIf=\"authService.loginForm.controls.password.hasError('required')\">\n          Password required\n        </mat-error>\n    </mat-form-field>\n        <button  mat-stroked-button color=\"accent\" class=\"btn-block  cyan lighten-1\"   [disabled]=\"!authService.loginForm.valid\" type=\"submit\">Login</button>\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" routerLink=\"/register\" type=\"submit\" style=\"margin-top: 2%;\">Register</button>\n    </mat-card-content>\n\n  </form>\n</mat-card>\n\n<!-- <div class=\"container-fluid\">\n    <div class=\"row\"\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  // loginForm:FormGroup;\n  \n  invalidLogin=true;\n \n  hide=true;\n\n  constructor(\n    private router:Router,\n    private http:HttpClient,\n    public authService:AuthService,\n    private formBuilder: FormBuilder,\n    private toaster:ToastrService\n    ){ }\n\n    ngOnInit(): void {\n   \n    }\n    \n    onSubmit()\n    {\n      if(this.authService.loginForm.invalid)\n      {\n        return;\n      }\n\n       this.authService.login()\n       .subscribe(\n        (res:any)=>{\n            const token = (<any>res).token;\n             localStorage.setItem(\"jwt\", token);\n             localStorage.setItem(\"user\",res.email);\n             localStorage.setItem(\"Customer_id\",res.customer_id)\n             this.invalidLogin = false\n             if(localStorage.getItem('user')=='admin@gmail.com')\n             {\n               this.router.navigate([\"/admin\"]);\n             }\n             else\n             {\n              this.router.navigate([\"/\"]);\n             }\n          }\n        ,\n        err=>{\n\n          console.log(err);\n          if(err.error.message==\"Customer is blocked\")\n          {\n            this.toaster.error(\"User is blocked\");\n          }\n          else\n          {\n            this.toaster.error(\"Invalid details\");\n          }\n        }\n      )    \n\n\n\n    //   this.http.post(\"http://localhost:52238/api/customer/login\", credentials, {\n    //   headers: new HttpHeaders({\n    //     \"Content-Type\": \"application/json\"\n    //   })\n    // }).subscribe(response => {\n    //   const token = (<any>response).token;\n    //   localStorage.setItem(\"jwt\", token);\n    //   this.invalidLogin = false;\n    //   this.router.navigate([\"/\"]);\n    // }, err => {\n    //   this.invalidLogin = true;\n    // });\n\n    \n    }\n\n\n \n  \n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, NgForm, ValidationErrors, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { catchError, mapTo, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\nclass CustomValidators{\n  static passwordValid(control:AbstractControl):ValidationErrors{\n    const regex=/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$/;\n  \n    if(regex.test(control.value)&&control.value!==null)\n    {\n      return null;\n    }\n    else\n    {\n      return {passwordInvalid:true};\n    }\n  }\n\n  static passwordMatch(control:AbstractControl):ValidationErrors{\n    const password=control.get(\"password\").value;\n    const confirmPassword=control.get(\"confirmPassword\").value;\n    \n    if((password===confirmPassword)&&(password!==null &&confirmPassword!==null))\n    {\n      return null;\n    }\n    else\n    {\n      return{passwordNotMatch:true};\n    }\n\n  }\n   static MatchPassword(control: AbstractControl) {\n      let parent = control.parent\n      if (parent) {\n        let password = parent.get('password').value;\n        let confirmPassword = control.value;\n\n        if (password != confirmPassword) {\n          return { ConfirmPassword: true };\n        } else {\n          return null\n        }\n      } else {\n        return null;\n      }\n    }\n  \n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiUrl='http://localhost:52238/api/auth'\n  invalidLogin=true;\n  loginForm=new FormGroup({\n    Customer_email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,[Validators.required])\n  })\n\n  registerForm=new FormGroup({\n    email:new FormControl(null,[Validators.required,Validators.email]),\n    password:new FormControl(null,[Validators.required,CustomValidators.passwordValid]),\n    confirmPassword:new FormControl(null,[Validators.required,CustomValidators.MatchPassword]),\n    firstName:new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]+')]),\n    lastName:new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]+')]),\n    mobile:new FormControl(null,[Validators.required,Validators.pattern('[7-9][0-9]{9}')])\n  })\n\n  username\n  password\n\n  constructor(\n    private http:HttpClient,\n    private router:Router\n      ) { }\n\n \n    register()\n    {\n      var body={\n        Customer_email:this.registerForm.value.email,\n        Customer_password:this.registerForm.value.password,\n        Customer_firstName:this.registerForm.value.firstName,\n        Customer_lastName:this.registerForm.value.lastName,\n        Customer_mobile:this.registerForm.value.mobile,\n        Customer_status:true\n      }\n        this.username=this.registerForm.value.email;\n        this.password=this.registerForm.value.password;\n\n      return this.http.post<any>(this.apiUrl+'/register', body,{headers:new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })})\n    \n    }\n\n    login()\n    { \n      \n      var body={\n        Customer_email:this.loginForm.value.Customer_email,\n        Customer_password:this.loginForm.value.password,\n      }\n      return this.http.post<any>(this.apiUrl+'/login', body,{headers:new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })})  \n    }\n\n\n            \n       \n     \n        \n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Product } from 'src/app/shared/product';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ProductImageComponent } from './product-image/product-image.component';\n\n\n@Component({\n  selector: 'app-listproducts',\n  templateUrl: './listproducts.component.html',\n  styleUrls: ['./listproducts.component.css']\n})\nexport class ListproductsComponent implements OnInit {\n\n  image\n\n  product_name\n\n\n  public productList\n  public completeList\n\n  formData:Product;\n  selectedFile:File=null;\n\n  constructor(\n    public productService:ProductService,\n    private dialog:MatDialog,\n    private router:Router,\n    private toaster:ToastrService,\n    private sanitizer:DomSanitizer\n  ) { }\n\n    \nproductModel:Product\n  \n  ngOnInit(): void {\n    this.productModel={\n      Product_id:null,\n      Product_name:null,\n      Product_category:null,\n      Product_Image:null,\n      Product_description:null,\n      Product_price:null,\n      Product_quantity:null   \n  }\n  this.productService.getProducts().then(\n    res=>\n    {\n   \n       this.completeList=res;\n       let objectURL = 'data:image/png;base64,' + this.completeList.product_Image;\n       this.completeList.product_Image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n       this.productList=this.completeList;\n    \n    }\n  )\n\n}\n\n  addProduct()\n  {\n    this.router.navigate(['/addproduct']);\n  }\n\n\n\n  populateForm(product)\n    {\n      \n      this.productService.product=product\n      this.router.navigate(['/addproduct', { value:\"edit\" }])\n    \n    }\n  Search()\n  {\n      if(this.product_name==\"\"){\n            this.ngOnInit();\n          }\n          else{\n        this.productList=this.completeList.filter(res=>{\n          if(res.product_name!=null)\n          return res.product_name.toLocaleLowerCase().match(this.product_name.toLocaleLowerCase())});\n\n        }\n  }\n  logout()\n  {\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"user\");\n    location.reload();\n    \n  }\n\n  openImage(image)\n  {\n    this.productService.image=image\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose=true;\n    this.dialog.open(ProductImageComponent, dialogConfig);\n  }\n\n\n\n}\n","\n     <app-nav></app-nav>\n    <br><br>\n\n<mat-card style=\"width: 90%;\" class=\"hcenter\">  \n           \n  <table>\n    <tr>\n      <th><h2>Products</h2></th>\n      <th style=\"float: right;\">\n      <div class=\"search\">\n        <div>\n          <input  name=\"product_name\" [(ngModel)]=\"product_name\" (ngModelChange)=\"Search()\"  type=\"text\" placeholder=\"Search . . .\" >\n        </div>\n      </div>\n      </th>\n\n    </tr>\n  </table>\n  \n        <table class=\"table\" >  \n               \n               <tr >  \n                 <th>ID</th>  \n                 <th>Name</th>  \n                 <th>Category</th>  \n                 <th>Quantity</th>  \n                 <th>Price</th>  \n                 <th>Description</th>  \n                 <th>Image</th>\n                 <th>Actions</th>\n               </tr> \n\n               \n               <tr *ngFor=\"let product of productList\">  \n                <td>{{product.product_id}}</td>  \n                <td>{{product.product_name}}</td>  \n                <td>{{product.product_category}}</td>  \n                <td>{{product.product_quantity}}</td>  \n                <td>{{product.product_price}}</td>  \n                <td style=\"width: 200px;\">{{product.product_description}}</td>\n                <span *ngIf=\"product.product_Image_Name!=null\">\n                  <td ><a href=\"javascript:void(0)\"> <img src=\"data:image/jpeg;base64,{{product.product_Image}}\" style=\"width: 30px; \" alt=\"An Image\" (click)=\"openImage(product.product_Image)\" /> </a> </td>\n                </span>\n                <span *ngIf=\"product.product_Image_Name==null\">\n                <td style=\"padding-top: 20px;\">No Image</td>\n                </span>\n                <td>\n                    <a (click)=\"productService.deleteProduct(product.product_id)\"href=\"javascript: void(0);\" title=\"Delete\">\n                    <mat-icon style=\"color: tomato; font-size: 25px;\" >delete</mat-icon>\n                    </a>\n                    <a (click)=\"populateForm(product)\" href=\"javascript: void(0);\" title=\"Edit\">\n                      <mat-icon style=\"color:blue; font-size: 25px; position: absolute; margin-left: 1%;\" >edit</mat-icon>\n                      </a>\n                </td>\n           \n          \n              </tr>\n\n            </table>\n          \n  </mat-card>","<!-- <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"> -->\n<div class=\"navbar-fixed\">\n <nav style=\"background-color:#342056;\">\n  <a routerLink=\"\" class=\"brand-logo\">Shopping App</a>\n    <div class=\"nav-wrapper\">\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\"> \n        <li *ngIf=\"!isAdmin\">\n          <a class=\"nav-link \" aria-current=\"page\" routerLink=\"\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\">Home</a>\n        </li>\n        <li *ngIf=\"isUser&&authenticated\">\n          <a class=\"nav-link \" aria-current=\"page\"  routerLink=\"/orderhistory\" routerLinkActive=\"active\">Order History</a>\n        </li >\n        <li *ngIf=\"isAdmin&&authenticated\">\n          <a routerLink=\"/allorders\" routerLinkActive=\"active\">All Orders</a>\n        </li>\n      <li *ngIf=\"isAdmin&&authenticated\">\n        <a routerLink=\"/product\" routerLinkActive=\"active\">Products</a>\n      </li>\n      <li *ngIf=\"isAdmin&&authenticated\" >\n        <a  routerLink=\"/addproduct\" routerLinkActive=\"active\">Add Product</a>\n      </li>\n      <li *ngIf=\"isAdmin&&authenticated\">\n        <a routerLink=\"/admin\" routerLinkActive=\"active\">Users</a>\n      </li>\n      <li *ngIf=\"!authenticated\"  >\n        <a class=\"nav-link \" aria-current=\"page\"  routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n      </li>\n      <li *ngIf=\"!authenticated\"  >\n        <a class=\"nav-link \" aria-current=\"page\"   routerLink=\"/register\" routerLinkActive=\"active\">Signup</a>\n      </li>\n      <li  *ngIf=\"authenticated\" (click)=\"logout()\">\n        <a>Logout</a>\n      </li>\n       \n      </ul>\n    </div>\n  </nav> \n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  authenticated=false\n  isAdmin=false;\n  isUser=false;\n  constructor(private jwtHelper:JwtHelperService) { }\n\n  ngOnInit(): void {\n    if(this.isUserAuthenticated())\n    {\n      this.authenticated=true;\n    }\n    if(localStorage.getItem('user')==\"admin@gmail.com\")\n    {\n      this.isAdmin=true;\n    }\n    if(localStorage.getItem('user')!=\"admin@gmail.com\"&&localStorage.getItem('user')!=null)\n    {\n      this.isUser=true;\n    }\n\n  \n  }\n  \n  isUserAuthenticated() {\n    const token: string = localStorage.getItem(\"jwt\");\n  \n    if (token && !this.jwtHelper.isTokenExpired(token)) {\n      return true;\n    }\n    else {\n  \n      return false;\n    }\n  }\n  logout()\n  {\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"user\");\n    location.reload();\n    \n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  orders\n  cartTotal\n  order\n  orderId\n  cartItems:any=[]\n\n  apiUrl='http://localhost:52238/api/order'\n  orderList\n  orderDetails\n  checkOutForm=new FormGroup({\n    address:new FormControl(null,[Validators.required]),\n    pincode:new FormControl(null,[Validators.required,Validators.pattern('[1-9][0-9]{5}')]),\n    mobile:new FormControl(null,[Validators.required,Validators.pattern('[7-9][0-9]{9}')])\n  })\n  constructor(private http:HttpClient,\n              private toaster:ToastrService) { }\n\n              \n  addOrder()\n  {\n    \n    if(localStorage.getItem('user')==null)\n    {\n      this.toaster.error('Please login')\n    }\n    else\n    {\n    \n      let formData =  new FormData();\n\n      formData.set('user',localStorage.getItem('user'))\n      formData.set('cartTotal',this.cartTotal)\n      formData.set('address',this.checkOutForm.value.address)\n      formData.set('pincode',this.checkOutForm.value.pincode)\n      formData.set('mobile',this.checkOutForm.value.mobile) \n      formData.set('ordersLength',this.orders.length)\n      for (var i = 0; i < this.orders.length; i++) {\n        formData.set('orders'+[i]+'.product_id',this.orders[i].product_id)\n        formData.set('orders'+[i]+'.product_name',this.orders[i].product_name)\n        formData.set('orders'+[i]+'.product_quantity',this.orders[i].product_quantity)   \n\n    }\n      this.http.post<any>(this.apiUrl+'/createorder',formData)\n     .subscribe(res=>{\n  \n        this.orderId=res.code;\n        this.toaster.success('New order placed'); \n        this.checkOutForm.reset();\n        localStorage.removeItem('cart');\n        this.cartTotal=0\n        this.cartItems=[]\n    \n     })\n\n    }\n    \n  }\n\n  getOrders()\n  {\n   return this.http.get(this.apiUrl+'/getcustomerorders').toPromise().then(res=>this.orderList=res)\n  }\n\n  getOrderDetails(id)\n  {\n    return this.http.get(this.apiUrl+'/getorderdetails/'+id).toPromise().then(res=>this.orderDetails=res)\n  }\n\n  addProductToCart(product)\n  {\n  \n    let productExists=false;\n    for(let i in this.cartItems)\n    { \n       if(this.cartItems[i].product_id===product.product_id)\n      {\n        productExists=true;\n  \n        if(product.product_quantity<=this.cartItems[i].product_quantity)\n        {\n          this.toaster.error('Maximum quantity exceeded');\n  \n        }\n        else\n        {\n          this.cartItems[i].product_quantity++\n          break;\n        }\n      \n      }\n    }\n    if(!productExists)\n    {\n      this.cartItems.push({\n        product_id:product.product_id,\n        product_name:product.product_name,\n        product_price:product.product_price,\n        product_quantity:1\n      })\n    }\n  \n       \n        this.cartTotal=0;\n        this.cartItems.forEach(item=>{\n          this.cartTotal+=(item.product_quantity*item.product_price)\n        })\n    localStorage.setItem('cart',JSON.stringify(this.cartItems))\n  \n  }\n  \n  removeProductFromCart(cartItem)\n  {\n    console.log(cartItem);\n    for(let i in this.cartItems)\n    {\n      if(this.cartItems[i].product_id===cartItem.product_id)\n      {\n        this.cartItems[i].product_quantity--\n        if(this.cartItems[i].product_quantity<=0)\n        {\n         \n          this.cartItems=this.cartItems.filter(x=>x.product_id!=cartItem.product_id)\n         \n        }\n      }\n      \n    }\n    this.cartTotal=0;\n    this.cartItems.forEach(item=>{\n      this.cartTotal+=(item.product_quantity*item.product_price)\n    })\n    localStorage.setItem('cart',JSON.stringify(this.cartItems))\n    if(this.cartItems.length==0)\n    {\n      localStorage.removeItem('cart');\n    }\n  }\n\n  \n\n}\n\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TestApp';\n}\n","<router-outlet></router-outlet>","<app-nav></app-nav>\n\n\n<div class=\"container center-align\">\n  <br><br>\n\n  <mat-card class=\"hcenter\">\n    <div class=\"table-header\">\n      <div style=\"margin-left: 2%;\"><h2>Users</h2></div>\n      <div>\n        <div class=\"search\">\n          <div>\n            <input name=\"customer_email\" [(ngModel)]=\"customer_email\" (ngModelChange)=\"Search()\" type=\"text\"\n              placeholder=\"Search . . .\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <table class=\"table\">\n      <tr ngclass=\"btn-primary\">\n        <th class=\"tbl2\">ID</th>\n        <th class=\"tbl2\">Email</th>\n        <th class=\"tbl2\">First Name</th>\n        <th class=\"tbl2\">Last Name</th>\n        <th class=\"tbl2\">Mobile</th>\n        <th class=\"tbl2\">Status</th>\n        <th class=\"tbl2\">Actions</th>\n\n      </tr>\n      <tr *ngFor=\"let customer of list\">\n\n\n        <td class=\"tbl2\">{{customer.customer_id}}</td>\n        <td class=\"tbl2\">{{customer.customer_email}}</td>\n        <td class=\"tbl2\">{{customer.customer_firstname}}</td>\n        <td class=\"tbl2\">{{customer.customer_lastname}}</td>\n        <td class=\"tbl2\">{{customer.customer_mobile}}</td>\n        <td class=\"tbl2\">{{customer.customer_status}}</td>\n\n        <span *ngIf=\"customer.customer_status!=0\">\n          <td>\n            <a (click)=\"blockUser(customer.customer_id)\" style=\"font-size: 20px; color: red; margin-right: 10px;\"\n              title=\"Block User\" href=\"javascript:void(0);\">\n              <mat-icon>lock</mat-icon>\n            </a>\n          </td>\n        </span>\n        <span *ngIf=\"customer.customer_status==0\">\n          <td>\n            <a style=\"font-size: 20px; color:blue; margin-right: 10px;\" title=\"UnBlock User\" href=\"javascript:void(0);\"\n              (click)=\"unBlockUser(customer.customer_id)\">\n              <mat-icon>lock_open</mat-icon>\n            </a>\n          </td>\n        </span>\n\n      </tr>\n    </table>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CustomerService } from '../shared/services/customer.service';\nimport { OrderService } from '../shared/services/order.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  list:any;\n  completeList:any;\n  customer_email:any;\n  // searchBox;\n  public term;\n  constructor(\n    private customerService:CustomerService,\n    private router:Router,\n    private toaster:ToastrService,\n  ) { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('user')!='admin@gmail.com')\n    {\n    this.router.navigate(['login']);\n    }\n    this.customerService.getCustomers().then(\n      response => {\n        if (!response) {\n          console.log(Error)\n        } else {\n           this.completeList  = response;\n           this.completeList=this.completeList.filter(x=>x.customer_email!=\"admin@gmail.com\")\n           this.list=this.completeList.filter(x=>x.customer_email!=\"admin@gmail.com\")\n          }\n      })\n  }\n\n \n  logout()\n  {\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"user\");\n    location.reload();\n    \n  }\n  blockUser(id)\n  {\n    \n    this.customerService.blockUser(id)\n    .then(\n      response=>{\n        if(!response)\n        {\n          console.log(Error);\n        }\n        else\n        {\n          if(response>0)\n          {\n            this.toaster.success(\"User blocked\");\n            setTimeout(\n              function(){ \n              location.reload(); \n              }, 500);    \n          }\n          else\n          {\n            if(confirm('Something went wrong')){\n              location.reload();  \n          }\n          }\n        }\n      }\n    )\n\n  }\n\n  \n  Search()\n  {\n\n      if(this.customer_email==\"\"){\n            this.ngOnInit();\n          }\n          else{\n        this.list=this.completeList.filter(res=>{\n          if(res.customer_email!=null)\n          return res.customer_email.toLocaleLowerCase().match(this.customer_email.toLocaleLowerCase())});\n\n        }\n  }\n\n\n  \n  unBlockUser(id)\n  {\n    this.customerService.unBlockUser(id).then(\n      response=>{\n        if(!response)\n        {\n          console.log(Error)\n        }\n        else\n        {\n          if(response>0)\n          {\n            this.toaster.success(\"User UnBlocked\");\n            setTimeout(\n              function(){ \n              location.reload(); \n              }, 500);    \n          \n          }\n          else\n          {           \n            if(confirm('Something went wrong')){\n              location.reload();  \n            }\n          }\n        }\n      }\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <!-- materialize css-->\n     <!-- Compiled and minified CSS -->\n     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n\n <app-listproducts></app-listproducts>\n","\n<app-nav></app-nav>\n\n<mat-card class=\"center-align hcenter\" >\n  <h2 class=\"center-align\">Add Product</h2>\n\n<form  [formGroup]=\"\nproductService.productForm\" (ngSubmit)=\"addProduct(productService.productForm.value)\" >\n      <input  formControlName=\"id\" hidden value=\"0\" />\n  <div class=\"row\">\n\n    <div class=\"col s6\">\n        <mat-form-field >\n            <input matInput placeholder=\"Name\" formControlName=\"name\" >\n            <mat-hint *ngIf=\"\n            productService.productForm.controls.name.errors\"> Name required</mat-hint>\n               <mat-error *ngIf=\"\n               productService.productForm.controls.name.hasError('pattern') && !\n               productService.productForm.controls.name.hasError('required')\">\n                Please enter a valid product name \n              </mat-error> \n              <mat-error *ngIf=\"\n              productService.productForm.controls.name.hasError('required')\">\n                Name required\n              </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"col s6\" style=\"margin-top: 3px;\">\n          <mat-form-field >\n            <mat-label>Product category</mat-label>\n            <mat-select  name=\"category\" formControlName=\"category\"> \n              <mat-option value=\"Watches\">\n                Watches\n              </mat-option>\n              <mat-option value=\"Headphones\">\n                Headphones\n              </mat-option>\n              <mat-option value=\"Speakers\">\n                Speakers\n              </mat-option>\n              <mat-option value=\"Lighting\">\n                Lighting\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        </div>  \n\n       <div class=\"row\">\n\n       <div class=\"col s6\">\n        <mat-form-field>\n            <input matInput placeholder=\"Quantity\" formControlName=\"quantity\">\n            <mat-hint *ngIf=\"\n            productService.productForm.controls.quantity.errors\"> Quantity required</mat-hint>\n               <mat-error *ngIf=\"\n               productService.productForm.controls.quantity.hasError('pattern') && !\n               productService.productForm.controls.name.hasError('required')\">\n                Please enter a valid product quantity \n              </mat-error> \n              <mat-error *ngIf=\"\n              productService.productForm.controls.quantity.hasError('required')\">\n                Quantity required\n              </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col s6\">\n        <mat-form-field>\n            <input matInput placeholder=\"Price\" formControlName=\"price\">\n            <mat-hint *ngIf=\"\n            productService.productForm.controls.price.errors\"> Price required</mat-hint>\n              <mat-error *ngIf=\"\n              productService.productForm.controls.price.hasError('pattern') && !\n              productService.productForm.controls.price.hasError('required')\">\n                Please enter a valid product price \n              </mat-error>\n              <mat-error *ngIf=\"\n              productService.productForm.controls.price.hasError('required')\">\n                Price required\n              </mat-error>\n        </mat-form-field>\n      </div>\n      </div>\n        <mat-form-field style=\"width: 91%;\">\n            <textarea matInput placeholder=\"Description\" formControlName=\"description\" \n            cdkAutosizeMinRows=\"3\"></textarea>\n            <mat-hint *ngIf=\"\n            productService.productForm.controls.description.errors\"> Description required</mat-hint>\n              <mat-error *ngIf=\"\n              productService.productForm.controls.description.hasError('required')\">\n                description required\n              </mat-error>\n        </mat-form-field>\n\n<!-- \n        <input type=\"file\"   class = \"file-field input-field\" formControlName=\"image\" (change)=\"\n        handleFileInput($event)\"  accept=\".jpg,.jpeg\"style=\"margin-left: 37px;\">\n        <br/> -->\n        <div class=\"file-field input-field \" style=\"position: relative; margin-left: 32%;\">\n          \n          <div class=\"btn\" style=\"width: 40%; border-radius: 50%;   background-color: white; color: blue;\">\n          <mat-icon>image</mat-icon>\n            <input  type=\"file\"  formControlName=\"image\" (change)=\"\n            handleFileInput($event)\"  accept=\".jpg,.jpeg\" >\n          </div>\n          <div class=\"file-path-wrapper\">\n            <input class=\"file-path validate\" type=\"text\">\n          </div>\n        </div>\n        <br>\n        <div class=\"row\"> \n\n          <div class=\"col s6\">\n          <button style=\"width:15vw;\" mat-flat-button  [disabled]=\"!\n          productService.productForm.valid\" type=\"submit\">Submit</button>\n          </div>\n          <div class=\"col s6\">\n          <button style=\"width:15vw;\" mat-flat-button color=\"primary\" type=\"reset\">Reset</button>\n          </div>\n        </div>\n\n\n</form>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { Product } from 'src/app/shared/product';\nimport { ProductService } from 'src/app/shared/services/product.service';\n\n@Component({\n  selector: 'app-addproduct',\n  templateUrl: './addproduct.component.html',\n  styleUrls: ['./addproduct.component.css']\n})\nexport class AddproductComponent implements OnInit {\n\n  title: string = \"Create\";  \n  selectedFile: File = null;\n  value\n  constructor(public productService:ProductService,\n    private router:Router,\n    private route:ActivatedRoute) { \n    \n    this.route.params.subscribe(params => {\n      this.value = params['value'];\n    });\n  }\n  productModel:Product\n  \n  ngOnInit(): void {\n\n    if(this.value==\"edit\")\n    {\n      this.productService.productForm.patchValue({\n        id:this.productService.product.product_id,\n        name:this.productService.product.product_name,\n        category:this.productService.product.product_category,\n        quantity:this.productService.product.product_quantity,\n        price:this.productService.product.product_price,\n        description:this.productService.product.product_description        \n      });\n\n    }\n    else\n    {\n      this.productService.productForm.reset();\n    }\n  \n  }\n\n\n  addProduct(data)\n  {\n    this.productService.addProduct(data,this.selectedFile);\n  }\n  logout()\n  {\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"user\");\n    location.reload();\n    \n  }\n\n  handleFileInput(fileInput: any) {\n    this.selectedFile = <File>fileInput.target.files[0];\n  }\n  resetProductForm()\n  {\n    this.productService.productForm.reset();\n    \n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './Authentication/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AuthguardService } from './Authentication/auth/authguard.service';\nimport { RegisterComponent } from './Authentication/register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input'\nimport {MatButtonModule} from '@angular/material/button'\nimport{MatSelectModule} from '@angular/material/select'\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { AuthService } from './shared/services/auth.service';\nimport {ToastrModule} from 'ngx-toastr'\nimport { MatIconModule } from '@angular/material/icon';\nimport { AdminComponent } from './admin/admin.component';\nimport { AddproductComponent } from './admin/product/addproduct/addproduct.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ListproductsComponent } from './admin/product/listproducts/listproducts.component';\nimport{MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { ProductComponent } from './admin/product/product/product.component'\nimport {MatCardModule} from '@angular/material/card';\nimport { ProductService } from './shared/services/product.service';\nimport { NavComponent } from './shared/shared-components/nav/nav.component';\nimport { ShoppingCartComponent } from './shared/shared-components/shopping-cart/shopping-cart.component';\nimport { ProductListComponent } from './shared/shared-components/shopping-cart/product-list/product-list.component';\nimport { CartComponent } from './shared/shared-components/shopping-cart/cart/cart.component';\nimport { CartItemComponent } from './shared/shared-components/shopping-cart/cart/cart-item/cart-item.component';\nimport { ProductItemComponent } from './shared/shared-components/shopping-cart/product-list/product-item/product-item.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { OrderService } from './shared/services/order.service';\nimport { OrderHistoryComponent } from './shared/shared-components/order-history/order-history.component';\nimport { CheckoutComponent } from './shared/shared-components/shopping-cart/cart/checkout/checkout.component';\nimport { OrderDetailsComponent } from './shared/shared-components/order-history/order-details/order-details.component';\nimport { AllOrdersComponent } from './admin/all-orders/all-orders.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatListModule} from '@angular/material/list';\nimport { OrderDetailsAdminComponent } from './admin/all-orders/order-details-admin/order-details-admin.component';\nimport { ProductImageComponent } from './admin/product/listproducts/product-image/product-image.component';\nimport { ProductDetailsComponent } from './shared/shared-components/shopping-cart/cart/cart-item/product-details/product-details.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('jwt');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    AdminComponent,\n    AddproductComponent,\n    ListproductsComponent,\n    ProductComponent,\n    NavComponent,\n    ShoppingCartComponent,\n    ProductListComponent,\n    CartComponent,\n    CartItemComponent,\n    ProductItemComponent,\n    NotFoundComponent,\n    OrderHistoryComponent,\n    CheckoutComponent,\n    OrderDetailsComponent,\n    AllOrdersComponent,\n    OrderDetailsAdminComponent,\n    ProductImageComponent,\n    ProductDetailsComponent,\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    Ng2SearchPipeModule,\n    BrowserAnimationsModule,\n    MatSelectModule ,\n    MatDialogModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatListModule,\n    MatSidenavModule,\n    MatTabsModule,\n    CommonModule,\n    ToastrModule.forRoot(),\n    JwtModule.forRoot({\n      config:{\n        tokenGetter:tokenGetter,\n        allowedDomains:[\"localhost:52238\"],\n        disallowedRoutes:[]\n      }\n     }),\n  ],\n  \n  providers: [AuthguardService,AuthService,ProductService,OrderService],\n  bootstrap: [AppComponent],\n  entryComponents:[ProductImageComponent]\n})\nexport class AppModule {\n  \n }\n","\n<app-nav></app-nav>\n<br><br>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n\n<div class=\"center-align\">\n\n    <div class=\"row \" class=\"hcenter\">\n\n          <mat-card>\n            <table>\n              <tr>\n                <th>    \n                  <h2>Orders</h2>\n                </th>\n              </tr>\n            </table>\n\n              <table class=\"table\" >\n                  <thead class=\"thead-dark table-primary\">\n                    <tr >\n                      <th >ID</th>\n                      <th >Customer Email</th>\n                      <th >Order Date and Time</th>\n                      <th >Order Total</th>\n                      <th >Order Status</th>\n                      <th >Details</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  <tr *ngFor=\"let order of orderList\" >\n                      <td>{{order.order_id}}</td>\n                      <td>{{order.customer_email}}</td>\n                      <td>{{order.order_date|date:'medium'}}</td>\n                      <td>{{order.order_total|currency:'INR'}}</td>\n                      <td>{{order.order_status}}</td>\n                      <td>\n                        <a title=\"Details\" style=\"margin-left: 10px;\" href=\"javascript:void(0);\" (click)=\"getDetails(order)\"><mat-icon>menu</mat-icon> </a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n      </mat-card>\n\n      </div>\n\n</div>  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { AdminComponent } from '../admin.component';\n\n@Component({\n  selector: 'app-all-orders',\n  templateUrl: './all-orders.component.html',\n  styleUrls: ['./all-orders.component.css']\n})\nexport class AllOrdersComponent implements OnInit {\n\n  constructor(private orderService:OrderService,\n    private router:Router) { }\n    orderList\n  ngOnInit(): void {\n    this.orderService.getOrders().then(res=>{\n      if(!res)\n      {\n        console.log(Error);\n      }\n      this.orderList=res;\n     // console.log(this.orderList)\n      this.orderList=this.orderList;\n      this.orderList=this.orderList.sort((order1,order2)=> \n      {return this.compareObjects(order1,order2, 'order_date')\n      })\n\n    })\n  }\n  getDetails(order)\n  {\n    this.orderService.order=order\n    this.router.navigate(['/orderdetailsadmin'])\n    \n  }\n\n  compareObjects(object1, object2, key) {\n    const obj1 = object1[key].toUpperCase()\n    const obj2 = object2[key].toUpperCase()\n  \n    if (obj1 < obj2) {\n      return 1\n    }\n    if (obj1 > obj2) {\n      return -1\n    }\n    return 0\n  }\n\n\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n\n<app-nav></app-nav>\n\n\n    <div class=\"row hcenter\" style=\"width: 50%;\">\n<br><br>\n<div class=\"row\">\n  <mat-card>\n<table class=\"table\" style=\"margin-left: 5%;\">\n    <thead class=\"thead-dark table-primary\">\n        <tr>\n        <th scope=\"col\">Product Id</th>\n        <th scope=\"col\">Product Name</th>\n        <th scope=\"col\">Product Quantity</th>\n        </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let order of orderDetail\">\n        <td>{{order.product_id}}</td>\n        <td>{{order.product_name}}</td>\n        <td>{{order.product_qty}}</td>\n\n      </tr>\n    </tbody>\n  </table>\n</mat-card>\n</div>\n\n<div class=\"row\">\n<mat-card>\n  <table class=\"table\">\n      <tr>\n        <th style=\"width: 50px;\">  \n          Customer Email:\n        </th>\n          <td>\n            {{orderService.order.customer_email}}\n          </td>\n      </tr>\n      <tr>\n        <th>  \n          Order Address:\n        </th>\n          <td>\n            {{orderService.order.order_address}}\n          </td>\n      </tr>\n      <tr>\n        <th>  \n          Pincode:\n        </th>\n          <td>\n            {{orderService.order.order_pincode}}\n          </td>\n      </tr>\n      <tr>\n        <th>  \n          Mobile:\n        </th>\n          <td>\n            {{orderService.order.order_mobile}}\n          </td>\n      </tr>\n      <tr>\n        <th>  \n          Status:\n        </th>\n          <td>\n            {{orderService.order.order_status}}\n          </td>\n      </tr>\n      <tr>\n        <th>  \n          Total:\n        </th>\n          <td>\n            {{orderService.order.order_total|currency:\"INR\"}}\n          </td>\n      </tr>\n\n</table>\n\n</mat-card>\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/services/order.service';\n\n@Component({\n  selector: 'app-order-details-admin',\n  templateUrl: './order-details-admin.component.html',\n  styleUrls: ['./order-details-admin.component.css']\n})\nexport class OrderDetailsAdminComponent implements OnInit {\n\n  orderDetail:any=[]\n  orders:any[]\n  user\n  constructor(public orderService:OrderService) { }\n  \n  ngOnInit(): void {\n    this.orderService.getOrderDetails(this.orderService.order.order_id).then(res=>{\n      this.orderDetail=res;\n    })\n    console.log(this.orderService.order)\n  }\n  \n}\n","<div *ngIf=\"orderService.cartItems.length==0\" class=\"alert alert-info\">Cart is Empty</div>\n<ul *ngIf=\"orderService.cartItems.length>0\" class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let item of orderService.cartItems\">\n\n        <app-cart-item [cartItem]=\"item\"></app-cart-item>\n    </li>\n    <li class=\"list-group-item active\">\n        <strong>Total:{{orderService.cartTotal|currency:\"INR\"}}</strong>\n    </li>\n</ul>\n<br>\n<div *ngIf=\"orderService.cartItems.length>0\">\n    <button type=\"button\" style=\"width: 165px;\" class=\"btn btn-md btn-primary product-btn\" (click)=\"checkout()\">Checkout</button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { OrderService } from 'src/app/shared/services/order.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  constructor(\n    public orderService:OrderService,\n    private router:Router,\n    private toaster:ToastrService) { }\n\n  ngOnInit(): void {\n  \n  this.orderService.cartTotal=0;\n  if(localStorage.getItem('cart'))\n  {\n      this.orderService.cartItems=JSON.parse(localStorage.getItem('cart'));\n      this.orderService.cartItems.forEach(item=>{\n      this.orderService.cartTotal+=(item.product_quantity*item.product_price)\n      })\n  }\n  // this.orderService.cartItems.forEach(item=>{\n  //   this.orderService.cartTotal+=(item.product_quantity*item.product_price)\n  // })\n  //localStorage.setItem('cart',JSON.stringify(this.orderService.cartItems))\n\n    // this.msg.getMsg().subscribe((product:any)=>\n    //   {\n    //     this.orderService.addProductToCart(product);\n    //   })\n\n\n      // this.msg.getCartItem().subscribe((cartItem:any)=>\n      // {\n      //   this.removeProductFromCart(cartItem);\n      // })\n\n  }\n\n  // removeProductFromCart(cartItem)\n  // {\n  //   for(let i in this.orderService.cartItems)\n  //   {\n  //     if(this.orderService.cartItems[i].product_id===cartItem.product_id)\n  //     {\n  //       this.orderService.cartItems[i].product_quantity--\n  //       if(this.orderService.cartItems[i].product_quantity<=0)\n  //       {\n  //         this.orderService.cartItems.pop({\n  //           product_id:cartItem.product_id\n          \n  //         })\n         \n  //       }\n  //     }\n      \n  //   }\n  //   this.orderService.cartTotal=0;\n  //   this.orderService.cartItems.forEach(item=>{\n  //     this.orderService.cartTotal+=(item.product_quantity*item.product_price)\n  //   })\n  //   localStorage.setItem('cart',JSON.stringify(this.orderService.cartItems))\n  //   if(this.orderService.cartItems.length==0)\n  //   {\n  //     localStorage.removeItem('cart');\n  //   }\n  // }\n\n\n  // addProductToCart(product)\n  // {\n  //  // event.preventDefault();\n\n  //   let productExists=false;\n  //   for(let i in this.orderService.cartItems)\n  //   { \n  //      if(this.orderService.cartItems[i].product_id===product.product_id)\n  //     {\n  //       productExists=true;\n\n  //       if(product.product_quantity<=this.orderService.cartItems[i].product_quantity)\n  //       {\n  //         this.toaster.error('Maximum quantity exceeded');\n\n  //       }\n  //       else\n  //       {\n  //         this.orderService.cartItems[i].product_quantity++\n  //         break;\n  //       }\n      \n  //     }\n  //   }\n  //   if(!productExists)\n  //   {\n  //     this.orderService.cartItems.push({\n  //       product_id:product.product_id,\n  //       product_name:product.product_name,\n  //       product_price:product.product_price,\n  //       product_quantity:1\n  //     })\n  //   }\n  \n       \n  //       this.orderService.cartTotal=0;\n  //       this.orderService.cartItems.forEach(item=>{\n  //         this.orderService.cartTotal+=(item.product_quantity*item.product_price)\n  //       })\n  //   localStorage.setItem('cart',JSON.stringify(this.orderService.cartItems))\n\n  // }\n\n  checkout()\n  {\n    \n    this.orderService.orders=this.orderService.cartItems\n    this.router.navigate(['checkout']);\n\n  }\n}\n"," <div class=\"row\">\n   <div class=\"col-md-2\">\n      <div class=\"cart-filters \">\n        <div class=\"input-field \" >\n            <input  type=\"text\" name=\"product_name\" [(ngModel)]=\"product_name\" (ngModelChange)=\"Search()\" \n        placeholder=\"Enter product to search\"/> \n      </div>\n      <select class=\"form-select\" style=\"height: 35px; font-size:small;\" aria-label=\"Default select example\" (change)=\"filterCategory($event.target.value)\">\n        <option selected>Filter</option>\n        <option value=\"Watches\">Watches</option>\n        <option value=\"Headphones\">Headphones</option>\n        <option value=\"Speakers\">Speakers</option>\n        <option value=\"Lighting\">Lighting</option>\n      </select>\n      </div>\n  </div>\n  \n  <div class=\"col-md-10\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-4\" *ngFor=\"let product of productList\">\n        <app-product-item [productItem]=\"product\"></app-product-item>\n      </div>\n    </div>\n  </div>\n\n</div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  completeList\n  productList\n  product_name\n  filterCategoryList\n  constructor(public productService:ProductService,\n    private sanitizer:DomSanitizer\n    ) { }\n\n  ngOnInit(): void {\n    \n    this.productService.getProducts().then(\n      res=>\n      {\n        if(Error)\n        {\n          console.log(Error)\n        }\n          \n         this.completeList=res;\n         let objectURL = 'data:image/png;base64,' + this.completeList.product_Image;\n         this.completeList.product_Image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n         this.productList=this.completeList;\n          this.filterCategoryList=this.completeList;\n          \n      }\n    )\n\n\n  }\n  Search()\n  {\n      if(this.product_name==\"\"){\n            this.productList=this.filterCategoryList\n          }\n          else{\n        this.productList=this.filterCategoryList.filter(res=>{\n          if(res.product_name!=null)\n          return res.product_name.toLocaleLowerCase().match(this.product_name.toLocaleLowerCase())});\n\n        }\n  }\n\n\n  filterCategory(value)\n  {\n    if(value==\"Filter\")\n    {\n      this.filterCategoryList=this.completeList;\n      this.productList=this.filterCategoryList;\n    }   \n    else\n    {\n      this.filterCategoryList=this.completeList.filter(res=>{\n        if(res.product_category!=null)\n        return res.product_category.toLocaleLowerCase().match(value.toLocaleLowerCase())}); \n        this.productList=this.filterCategoryList\n    }\n   \n  }\n}\n","\n<app-nav></app-nav>\n\n<div class=\"container hcenter\">\n  <mat-card>\n    <form  class=\"example-form\" [formGroup]=\"orderService.checkOutForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-card-content> \n    \n<div class=\"row\">\n    <mat-form-field style=\"width:25vw\">\n        <input matInput placeholder=\"Address\" formControlName=\"address\">\n        <mat-error *ngIf=\"orderService.checkOutForm.controls.address.hasError('required')\">\n          Address required\n        </mat-error>\n    </mat-form-field>\n</div>\n<div class=\"row\">\n    <mat-form-field style=\"width:25vw\">\n        <input matInput placeholder=\"Pincode\" formControlName=\"pincode\">\n        <mat-error *ngIf=\"orderService.checkOutForm.controls.pincode.hasError('pattern') && !orderService.checkOutForm.controls.pincode.hasError('required')\">   \n          Pincode invalid \n           </mat-error>\n           <mat-error *ngIf=\"orderService.checkOutForm.controls.pincode.hasError('required')\">\n             Pincode required\n           </mat-error>\n    </mat-form-field>\n</div>\n<div class=\"row\">   \n\n    <mat-form-field style=\"width:25vw\">\n        <input matInput placeholder=\"Mobile\" formControlName=\"mobile\">\n            <mat-error *ngIf=\"orderService.checkOutForm.controls.mobile.hasError('pattern') && !orderService.checkOutForm.controls.mobile.hasError('required')\">   \n            Mobile invalid \n            </mat-error>\n           <mat-error *ngIf=\"orderService.checkOutForm.controls.mobile.hasError('required')\">\n             Mobile required\n           </mat-error>\n    </mat-form-field>\n</div>\n              <div class=\"row\"> \n                <button class=\"btn-class\" mat-stroked-button color=\"accent\" [disabled]=\"!orderService.checkOutForm.valid\" type=\"submit\">Submit</button>\n\n              </div>        \n      </mat-card-content>\n    \n      </form>\n    </mat-card>\n    \n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { OrderService } from 'src/app/shared/services/order.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  constructor(public orderService:OrderService) { }\n  submitted = false;\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit()\n  {\n    this.orderService.addOrder();\n  }\n}\n","<button mat-button class=\"close-icon\" class=\"close-button\" [mat-dialog-close]=\"true\">\n    <mat-icon>close</mat-icon>\n</button>\n\n<div class=\"container\">\n    <div class=\"row\">\n            <div class=\"col s6\">\n            <span *ngIf=\"product.product_Image_Name!=null\">\n                <img class=\"card-img-top\" style=\"width: 200px;\" src=\"data:image/jpeg;base64,{{product.product_Image}}\"alt=\"Card image cap\">\n              </span>\n            </div>\n            <div class=\"col s6\">\n                <div> \n                    <h2>{{product.product_name}}</h2>\n                </div>\n                <div>   \n                    {{product.product_price|currency:\"INR\"}}\n                </div>\n                <br/>\n                <div>\n                    <h4>Description:</h4>\n                    {{product.product_description}}\n                </div>\n                <br/>  <br/>\n                <div>   \n                    <span *ngIf=\"product.product_quantity!=0\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary product-btn mr-1\" (click)=\"handleAddToCart(product)\" >Add to Cart</button>\n                    </span>\n                    <span *ngIf=\"product.product_quantity==0\">\n                        <button type=\"button\" class=\"btn btn-sm  product-btn mr-1\" style=\"background-color: gray;\" disabled >Add to Cart</button>\n                    </span>\n                    <span *ngIf=\"product.product_quantity==0\" style=\"color: red; font-weight: bold;\" class=\"hcenter\">\n                        <h4>Out of stock</h4>  \n                    </span>\n                </div>\n            </div>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  constructor(private productService:ProductService,\n    private orderService:OrderService) { }\n\n  product\n  ngOnInit(): void {\n  this.product=this.productService.product;\n\n  console.log(this.product);\n  }\n  handleAddToCart(product)\n  {\n    this.orderService.addProductToCart(product)\n  }\n\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/services/order.service';\n\n@Component({\n  selector: 'app-cart-item',\n  templateUrl: './cart-item.component.html',\n  styleUrls: ['./cart-item.component.css']\n})\nexport class CartItemComponent implements OnInit {\n  @Input()\n  cartItem\n\n  constructor(private orderService:OrderService) { }\n\n  ngOnInit(): void {\n\n  }\n  deleteCartItem(cartItem)\n  {\n      this.orderService.removeProductFromCart(cartItem);\n\n  }\n\n}\n","<div class=\"cart-item\">\n    <span>{{cartItem.product_name}}</span> x\n    <span>{{cartItem.product_quantity}}</span> \n     <strong> {{cartItem.product_quantity*cartItem.product_price|currency:\"INR\"}}</strong>\n     <br>\n     <button  class=\"btn btn-sm btn-danger product-btn\" (click)=\"deleteCartItem(cartItem)\">🗑</button>\n</div>\n","import { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  image\n  productList\n  product\n  completeList\n  constructor(\n    private http:HttpClient,\n    private toaster:ToastrService,\n    private router:Router,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  apiUrl='http://localhost:52238/api/product'\n\n  public productForm=new FormGroup({\n    id:new FormControl(0),\n    name:new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*')]),\n    category:new FormControl(null,[Validators.required]),\n    quantity:new FormControl(null,[Validators.required,Validators.pattern('[0-9]{1,}')]),\n    price:new FormControl(null,[Validators.required,Validators.pattern('(\\\\d+)(\\\\.)?(\\\\d+)?')]),\n    description:new FormControl(null,[Validators.required]),\n    image:new FormControl(null)\n  })\n\n\n\n  \n  getProducts()\n  {\n     return this.http.get(this.apiUrl+'/allproducts').toPromise().then()\n\n      \n  }\n\n  addProduct(data,file)\n  {\n    const token=localStorage.getItem('jwt');\n    const headers = new HttpHeaders({Authorization: `Bearer ${token}`});\n\n\n    let formData =  new FormData();\n    formData.set('Product_id',data.id)\n    formData.set('Product_name', data.name);\n    formData.set('Product_category',data.category);\n    formData.set('Product_quantity',data.quantity);\n    formData.set('Product_price',data.price);\n    formData.set('Product_description',data.description);\n    formData.set('Image',file);\n    \n    if(data.id==null||data.id==0)\n    {    \n      this.http.post<any>(this.apiUrl+'/addproduct',formData,{headers:headers})\n      .subscribe(res => {\n        this.toaster.success('New product added');\n        this.productForm.reset();\n        setTimeout(\n          function(){ \n          }, 500);\n          \n      })\n        }\n    else\n    {\n    \n      this.http.post<any>(this.apiUrl+'/editproduct',formData)\n      .subscribe(res=>{\n     \n      })\n      this.toaster.success('Product updated');\n      this.productForm.reset();\n      setTimeout(\n        function(){ \n        }, 500);\n\n      }\n\n  }\n\n  \n  deleteProduct(id)\n  {\n    return this.http.delete(this.apiUrl+'/deleteproduct/'+id)\n    .subscribe(res=>{\n      if(Error)\n      {\n        console.log(Error);\n      }\n      if(res==1)\n      {\n        this.toaster.success('Product deleted');\n        setTimeout(\n          function(){ \n          location.reload(); \n          }, 500);\n        \n      }\n      else\n      {\n        alert('Error in deleting product');\n      }\n\n    })\n  }\n\n  getProduct(id)\n  {\n    return this.http.get(this.apiUrl+'/getproduct/'+id)\n  \n\n  }\n  editProduct(product)\n  {\n     return  this.http.put(this.apiUrl +'/editproduct/', product)\n     .subscribe(res=>{\n      if(Error)\n      {\n        console.log(Error);\n      }\n      if(res==1)\n      {\n        this.toaster.success('Product updated');\n        setTimeout(\n          function(){ \n          location.reload(); \n          }, 500);\n      }\n    }\n   )\n  }\n  \n   \n\n}\n","<app-nav></app-nav>\n<div class=\"main-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n  <mat-card class=\"box\" style=\"width:70%;\">\n    <mat-card-header>\n      <mat-card-title>Sign Up</mat-card-title>\n    </mat-card-header>\n    <form  class=\"example-form hcenter\" [formGroup]=\"authService.registerForm\" (ngSubmit)=\"onSubmit()\" >\n      <mat-card-content> \n\n\n          <mat-form-field style=\"width:25vw\">\n                <input matInput placeholder=\"Email\" formControlName=\"email\">\n                <mat-error *ngIf=\"authService.registerForm.controls.email.hasError('required')\">\n                  Email required\n                </mat-error>\n                  <mat-error *ngIf=\"authService.registerForm.controls.email.hasError('email') && !authService.registerForm.controls.email.hasError('required')\">\n                    Please enter a valid email address\n                  </mat-error>\n                 \n            </mat-form-field>\n            <mat-form-field style=\"width:25vw\">\n                <input matInput placeholder=\"Password\"  [type]=\"hide ? 'password' : 'text'\"  formControlName=\"password\">\n                <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n\n                <mat-hint *ngIf=\"authService.registerForm.controls.password.errors\"> Minimum length is 8 and it must have at-least 1 special character, 1 number and 1 letter</mat-hint>\n                <mat-error *ngIf=\"authService.registerForm.controls.password.hasError('required')\">\n                  Password required\n                </mat-error>\n                <mat-error *ngIf=\"authService.registerForm.controls.password.hasError('passwordInvalid') && !authService.registerForm.controls.password.hasError('required')\">\n                    Please enter a valid Password\n                    Minimum length is 8 and it must have at-least 1 special character, 1 number and 1 letter\n                  </mat-error>\n                \n            </mat-form-field>\n            <mat-form-field style=\"width:25vw\">\n                <input matInput placeholder=\"Confirm Password\" [type]=\"hide2 ? 'password' : 'text'\"  formControlName=\"confirmPassword\">\n                <mat-icon matSuffix (click)=\"hide2 = !hide2\">{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\n\n        \n                   <mat-error *ngIf=\"authService.registerForm.controls.confirmPassword.hasError('ConfirmPassword') && !authService.registerForm.controls.confirmPassword.hasError('required')\">\n                   Confirm password do not match \n                  </mat-error>\n                  <mat-error *ngIf=\"authService.registerForm.controls.confirmPassword.hasError('required')\">\n                    Confirm Password required\n                  </mat-error>\n            </mat-form-field >\n            <mat-form-field style=\"width:25vw\">\n                <input matInput placeholder=\"First Name\" formControlName=\"firstName\">\n                <mat-error *ngIf=\"authService.registerForm.controls.firstName.hasError('pattern') && !authService.registerForm.controls.firstName.hasError('required')\">   \n                  First name can have letters only \n                   </mat-error>\n                   <mat-error *ngIf=\"authService.registerForm.controls.firstName.hasError('required')\">\n                     First name required\n                   </mat-error>\n            </mat-form-field>\n            <mat-form-field style=\"width:25vw\">\n                <input matInput placeholder=\"Last Name\" formControlName=\"lastName\">\n                <mat-error *ngIf=\"authService.registerForm.controls.lastName.hasError('required')\">\n                  Last name required\n                </mat-error>\n                <mat-error *ngIf=\"authService.registerForm.controls.lastName.hasError('pattern') && !authService.registerForm.controls.lastName.hasError('required')\">\n                    Last name can have letters only \n                   </mat-error>\n                   \n            </mat-form-field>\n            <mat-form-field style=\"width:25vw\">\n                <input matInput placeholder=\"Mobile\" formControlName=\"mobile\">\n                    <mat-error *ngIf=\"authService.registerForm.controls.mobile.hasError('pattern') && !authService.registerForm.controls.mobile.hasError('required')\">\n                    Mobile must be of 10 digits and can only have numbers\n                    </mat-error>\n                   <mat-error *ngIf=\"authService.registerForm.controls.mobile.hasError('required')\">\n                     Mobile required\n                   </mat-error>\n            </mat-form-field>\n            <button class=\"btn-class\" mat-stroked-button color=\"accent\" routerLink=\"/login\" type=\"submit\" >Login</button>\n            <button class=\"btn-class\" mat-stroked-button color=\"accent\" [disabled]=\"!authService.registerForm.valid\" type=\"submit\" style=\"margin-top: 2%;\">Register</button>\n            <!-- <button class=\"btn-class\" mat-stroked-button color=\"accent\" routerLink=\"/\" type=\"submit\">Home</button> -->\n\n          </mat-card-content>\n\n    </form>\n  </mat-card>\n\n<!--        \n        Email:<input id=\"email\" formControlName=\"email\"> <br/>\n      \n        Password:<input id=\"password\" type=\"password\" formControlName=\"password\"><br/>\n        Confirm Password:<input id=\"confirmPassword\" type=\"password\" formControlName=\"confirmPassword\"> <br/>\n        First Name<input id=\"firstName\" formControlName=\"firstName\"><br/>\n        Last Name<input id=\"lastName\" formControlName=\"lastName\"><br/>\n        Mobile<input id=\"mobile\" formControlName=\"mobile\"><br/>\n        <button class=\"button\" type=\"submit\">Register</button> -->\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  hide = true;\n  hide2=true;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private http:HttpClient,\n    public authService:AuthService,\n    private toaster:ToastrService,\n    private router:Router\n  ) { }\n  ngOnInit(): void {\n\n\n  }\n\n\n  onSubmit()\n  {\n        if(this.authService.registerForm.invalid)\n        {\n          return;\n        }\n        this.authService.register()\n        .subscribe(\n        (res:any)=>{\n          if(res.message==\"Customer is blocked\")\n          {\n            this.toaster.error(\"User is blocked\");\n          }\n          else\n          {\n            if(res.code>0)\n          {\n            this.authService.registerForm.reset();\n            this.toaster.success('New user created!','Registeration successful ')\n            const token = (<any>res).token;\n             localStorage.setItem(\"jwt\", token);\n             localStorage.setItem(\"user\",res.email);\n             localStorage.setItem(\"Customer_id\",res.customer_id)\n             this.router.navigate([\"/\"]);\n\n          }\n          else if(res.message===\"Customer is already registered\")\n          {\n            console.log(res);\n            this.toaster.error('User already exists!','Registeration failed ')\n\n          }\n          }\n          \n        },\n        err=>{\n         console.log(err);\n        }\n      )    \n\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav></app-nav>\r\n<div class=\"hcenter\">\r\n    <h1>404</h1>\r\n    <h3>Not Found</h3>\r\n</div>"," <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf\" crossorigin=\"anonymous\"></script>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"> \n\n<app-nav></app-nav>\n\n<table class=\"table\">\n    <thead class=\"thead-dark table-primary\">\n      <tr>\n        <th scope=\"col\">Product Id</th>\n        <th scope=\"col\">Product Name</th>\n        <th scope=\"col\">Product Quantity</th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let order of orderDetail\">\n        <td>{{order.product_id}}</td>\n        <td>{{order.product_name}}</td>\n        <td>{{order.product_qty}}</td>\n\n      </tr>\n    </tbody>\n  </table>\n\n  \n<div class=\"row hcenter\">\n    <table class=\"table\">\n        <tr>\n          <th width=\"50px\">  \n            Customer Email:\n          </th>\n            <td>\n              {{orderService.order.customer_email}}\n            </td>\n        </tr>\n        <tr>\n          <th>  \n            Order Address:\n          </th>\n            <td>\n              {{orderService.order.order_address}}\n            </td>\n        </tr>\n        <tr>\n          <th>  \n            Pincode:\n          </th>\n            <td>\n              {{orderService.order.order_pincode}}\n            </td>\n        </tr>\n        <tr>\n          <th>  \n            Mobile:\n          </th>\n            <td>\n              {{orderService.order.order_mobile}}\n            </td>\n        </tr>\n        <tr>\n          <th>  \n            Status:\n          </th>\n            <td>\n              {{orderService.order.order_status}}\n            </td>\n        </tr>\n        <tr>\n          <th>  \n            Total:\n          </th>\n            <td>\n              {{orderService.order.order_total|currency:\"INR\"}}\n            </td>\n        </tr>\n  \n  </table>\n  \n  </div>\n  \n\n","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/services/order.service';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n\n  orderDetail:any=[]\n  orders:any[]\n  user\n  constructor(public orderService:OrderService) { }\n  ngOnInit(): void {\n    this.orderService.getOrderDetails(this.orderService.orderId).then(res=>{\n      this.orderDetail=res;\n    })\n    this.orders=this.orderService.orderList.filter(res=>{\n      if(res.customer_id!=null)\n      return res.customer_id ==localStorage.getItem('Customer_id')}); \n      this.user=localStorage.getItem('user');\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private http:HttpClient) { }\n\n  apiUrl='http://localhost:52238/api/customer'\n  list;\n  status;\n\n  getCustomers()\n  {\n    return this.http.get(this.apiUrl+'/AllCustomerList').toPromise().then(res => this.list = res );\n  }\n\n  blockUser(id)\n  {\n    \n    return this.http.post(this.apiUrl+'/blockcustomer/',id).toPromise().then(res=>this.status=res);\n  }\n  unBlockUser(id)\n  {\n    return this.http.post(this.apiUrl+'/unblockcustomer/',id).toPromise().then(res=>this.status=res);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n            <app-product-list></app-product-list>\n        </div>\n        <div class=\"col-md-2\">\n            <app-cart></app-cart>\n        </div>\n    </div>\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { AllOrdersComponent } from './admin/all-orders/all-orders.component';\nimport { AuthguardService } from './Authentication/auth/authguard.service';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './Authentication/login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { OrderDetailsComponent } from './shared/shared-components/order-history/order-details/order-details.component';\nimport { OrderHistoryComponent } from './shared/shared-components/order-history/order-history.component';\nimport { AddproductComponent } from './admin/product/addproduct/addproduct.component';\nimport { ListproductsComponent } from './admin/product/listproducts/listproducts.component';\nimport { ProductComponent } from './admin/product/product/product.component';\nimport { RegisterComponent } from './Authentication/register/register.component';\nimport { CheckoutComponent } from './shared/shared-components/shopping-cart/cart/checkout/checkout.component';\nimport { OrderDetailsAdminComponent } from './admin/all-orders/order-details-admin/order-details-admin.component';\n\n\nconst routes: Routes = [\n  {path:'',component:HomeComponent},\n  {path:'login',component:LoginComponent},\n  {path:'register',component:RegisterComponent},\n  {path:'admin',component:AdminComponent,canActivate:[AuthguardService]},\n  {path:'listproducts',component:ListproductsComponent,canActivate:[AuthguardService]},\n  {path:'addproduct',component:AddproductComponent,canActivate:[AuthguardService]},\n  {path:'product',component:ProductComponent,canActivate:[AuthguardService]},\n  {path:'orderhistory',component:OrderHistoryComponent,canActivate:[AuthguardService]},\n  {path:'checkout',component:CheckoutComponent,canActivate:[AuthguardService]},\n  {path:'orderdetails',component:OrderDetailsComponent,canActivate:[AuthguardService]},\n  {path:'orderdetailsadmin',component:OrderDetailsAdminComponent,canActivate:[AuthguardService]},\n  {path:'allorders',component:AllOrdersComponent,canActivate:[AuthguardService]},\n  {path:\"**\",component:NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}